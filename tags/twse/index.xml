<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>TWSE - Tag - HJL</title>
        <link>http://hsiangjenli.github.io/tags/twse/</link>
        <description>TWSE - Tag - HJL</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hsiangjenli@gmail.com (HJL)</managingEditor>
            <webMaster>hsiangjenli@gmail.com (HJL)</webMaster><lastBuildDate>Sat, 05 Dec 2020 21:55:51 &#43;0800</lastBuildDate><atom:link href="http://hsiangjenli.github.io/tags/twse/" rel="self" type="application/rss+xml" /><item>
    <title>TWSE [7] Interactive Candlestick Charts</title>
    <link>http://hsiangjenli.github.io/twse-7-interactive-candlestick-charts/</link>
    <pubDate>Sat, 05 Dec 2020 21:55:51 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-7-interactive-candlestick-charts/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/gCPqCli.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com Interactive Candlestick Charts Plotly 1  pip install plotly   個股月成交資訊 SQL連線 1 2 3 4 5 6 7 8 9 10  user = &#39;root&#39; pw = &#34;YourPassworrd&#34; db = &#34;STOCK&#34; engine = create_engine(&#34;mysql+pymysql://{}:{}@localhost/{db}&#34;.format(user,pw,db=db)) df = pd.read_sql(&#34;SELECT* FROM `twse` WHERE `Stock Code` = 2330 &#34;, engine, coerce_float=True, parse_dates=True) df = df.drop(columns = [&#39;Stock Code&#39;,&#39;Change&#39;,&#39;Transaction&#39;,&#39;Trade Value&#39;]) df = df.rename(columns = {&#39;Opening Price&#39;: &#39;Open&#39;,&#39;Highest Price&#39;:&#39;High&#39;,&#39;Closing Price&#39;:&#39;Close&#39;, &#39;Lowest Price&#39;:&#39;Low&#39;,&#39;Closing Price&#39;:&#39;Close&#39;,&#39;Trade Volume&#39;:&#39;Volume&#39;})   Fig1 Basic 1 2 3 4 5 6 7 8  fig = go.]]></description>
</item><item>
    <title>TWSE [6] MySQL to Dataframe &amp; mplfinance K線圖</title>
    <link>http://hsiangjenli.github.io/twse-6-mysql-to-dataframe-mplfinance-k%E7%B7%9A%E5%9C%96/</link>
    <pubDate>Sun, 29 Nov 2020 12:40:15 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-6-mysql-to-dataframe-mplfinance-k%E7%B7%9A%E5%9C%96/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/ydPTJCO.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com MySQL to Dataframe SQL連線 1 2 3 4 5 6 7 8 9 10  user = &#39;root&#39; pw = &#34;YourPassworrd&#34; conn=MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw,charset=&#39;utf8&#39;) cursor=conn.cursor() cursor.execute(&#34;CREATE DATABASE IF NOT EXISTS TWSE DEFAULT CHARSET=utf8 DEFAULT COLLATE=utf8_unicode_ci&#34; ) engine = create_engine(&#34;mysql+pymysql://{}:{}@localhost/{db}&#34;.format(user,pw,db=&#34;TWSE&#34;)) df = pd.read_sql(&#34;SELECT* FROM `twse` WHERE `Stock Code` = 2330 AND `Date` BETWEEN &#39;2019/11/10 00:00:00&#39; AND &#39;2020/1/10 23:59:59&#39;&#34;, engine, coerce_float=True, parse_dates=True)   讀取資料庫Table至Dataframe 1 2 3 4  import pandas as pd df = pd.]]></description>
</item><item>
    <title>TWSE [5] mpl_finance K線圖</title>
    <link>http://hsiangjenli.github.io/twse-5-mpl_finance-k%E7%B7%9A%E5%9C%96/</link>
    <pubDate>Sun, 29 Nov 2020 12:05:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-5-mpl_finance-k%E7%B7%9A%E5%9C%96/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/bpLPbNK.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com mpl_finance [舊版] SQL連線 個股月成交資訊 1 2 3 4 5 6 7 8  import MySQLdb user = &#39;root&#39; pw = &#34;YourPassworrd&#34; conn=MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw,charset=&#39;utf8&#39;) cursor=conn.cursor() cursor.execute(&#39;USE STOCK&#39;)   mpl_finance 1 2 3  import matplotlib.pyplot as plt import mpl_finance as mpf %matplotlib inline   基本設定 1 2 3 4 5 6 7 8 9 10 11 12 13  p = [int(e) for e in input(&#34;請輸入起始日期和結束日期&#34;).split(&#34; &#34;)] # 以空格隔開 period = &#34;`Date` BETWEEN &#39;{}/{}/{} 00:00:00&#39; AND &#39;{}/{}/{} 23:59:59&#39;&#34;.]]></description>
</item><item>
    <title>TWSE [4] 資料存入MySQL及取出</title>
    <link>http://hsiangjenli.github.io/twse-4-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5mysql/</link>
    <pubDate>Sun, 29 Nov 2020 11:25:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-4-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5mysql/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/zzwaCmc.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com TWSE的資料存入MySQL SQL連線 1 基本設定 1 2 3 4  import MySQLdb user = &#39;root&#39; pw = &#34;YourPassworrd&#34;   2 不使用中文 1 2  conn = MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw) cursor=conn.cursor()   3 可使用中文 / charset=&lsquo;utf8&rsquo; / 1 2  conn=MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw,charset=&#39;utf8&#39;) cursor=conn.cursor()   create_engine pymysql sqlalchemy 1  pip install pymysql sqlalchemy   1 2 3  from sqlalchemy import create_engine engine = create_engine(&#34;mysql+pymysql://{}:{}@localhost/{db}&#34;.format(user,pw,db=&#34;STOCK&#34;))   個股月成交資訊/en/ 完整程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  import urllib.]]></description>
</item><item>
    <title>TWSE [3] 資料存入SQLite</title>
    <link>http://hsiangjenli.github.io/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/</link>
    <pubDate>Sat, 28 Nov 2020 22:57:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/FEjSY9d.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com TWSE的資料存入SQLite 個股月成交資訊 1 SQLite連線 1 2 3 4  import sqlite3 conn = sqlite3.connect(&#39;Python_Stock_TWSE.db&#39;) c = conn.cursor()   2 建立Table 1  c.execute(&#39;CREATE TABLE IF NOT EXISTS TWSE2330_tempt (股票代碼, 日期, 成交股數, 成交金額, 開盤價, 最高價, 最低價, 收盤價, 漲跌價差, 成交筆數)&#39;)   3 刪除Table 1  c.execute(&#39;DROP TABLE TWSE2330_tempt&#39;)   # 完整程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  import pandas as pd import urllib.]]></description>
</item><item>
    <title>TWSE [2] 將DataFrame存入CSV檔 &amp; 抓取多筆資料</title>
    <link>http://hsiangjenli.github.io/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/</link>
    <pubDate>Sat, 28 Nov 2020 16:57:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/gnDD4XF.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com DataFrame存入CSV檔 個股月成交資訊 1 相對路徑 1  df.to_csv(&#39;檔案名稱.csv&#39;)   2 絕對路徑 1  df.to_csv (r&#39;路徑\檔案名稱.csv&#39;)   3 取得路徑 1 2 3  import os os.getcwd()   4 df.to_csv 使用 1 以&quot;/&ldquo;隔開 1  df.to_csv (&#39;檔案名稱.csv&#39;, sep=&#39;/&#39;)   2 將檔案重複寫入 1  df.to_csv (&#39;檔案名稱.csv&#39;, mode = &#39;a&#39;)   3 替換空值 1  df.to_csv (&#39;檔案名稱.csv&#39;, na_rep=&#39;NA&#39;)   4 小數4位 1  df.to_csv (&#39;檔案名稱.csv&#39;, float_format=&#39;%.4f&#39;)   5 不保留列名header 1  df.]]></description>
</item><item>
    <title>TWSE [1] jsn檔解析</title>
    <link>http://hsiangjenli.github.io/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/</link>
    <pubDate>Fri, 27 Nov 2020 16:57:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/adlW9i9.png" referrerpolicy="no-referrer">
            </div>Freepik from www.flaticon.com TWSE股票資料 1 個股月成交資訊   個股月成交資訊以台積電2330為例
  點選 列印/HTML
  更改 html 為 jsn
  更改 20200813為 20200713，即可找到7月資料
  更改 stockNo=2330 為 stockNo=1234，即可找到黑松交易資
 https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn&amp;date=20200713&amp;stockNo=2330
  https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn&amp;date=20200713&amp;stockNo=1234
   在exchangeReport前加上 /en/ 轉換成英文版
 https://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn&amp;date=20200713&amp;stockNo=1234
 1 2 3 4 5  stock_list = [1234, 2330] date = 20200813 for j in range(0,len(stock_list)): url = &#34;http://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn&amp;date={}&amp;stockNo={}&#34;.format(date,stock_list[j]) print(url)   ``
  2 每日收盤行情   每日收盤行情-全部]]></description>
</item></channel>
</rss>
