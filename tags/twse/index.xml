<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>TWSE - Tag - HJL</title>
        <link>http://hsiangjenli.github.io/tags/twse/</link>
        <description>TWSE - Tag - HJL</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hsiangjenli@gmail.com (HJL)</managingEditor>
            <webMaster>hsiangjenli@gmail.com (HJL)</webMaster><lastBuildDate>Sat, 28 Nov 2020 22:57:26 &#43;0800</lastBuildDate><atom:link href="http://hsiangjenli.github.io/tags/twse/" rel="self" type="application/rss+xml" /><item>
    <title>TWSE [3] 資料存入SQLite</title>
    <link>http://hsiangjenli.github.io/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/</link>
    <pubDate>Sat, 28 Nov 2020 22:57:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/</guid>
    <description><![CDATA[TWSE的資料存入SQLite 個股月成交資訊 1 SQLite連線 1 2 3 4  import sqlite3 conn = sqlite3.connect(&#39;Python_Stock_TWSE.db&#39;) c = conn.cursor()   2 建立Table 1  c.execute(&#39;CREATE TABLE IF NOT EXISTS TWSE2330_tempt (股票代碼, 日期, 成交股數, 成交金額, 開盤價, 最高價, 最低價, 收盤價, 漲跌價差, 成交筆數)&#39;)   3 刪除Table 1  c.execute(&#39;DROP TABLE TWSE2330_tempt&#39;)   # 完整程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  import pandas as pd import urllib.]]></description>
</item><item>
    <title>TWSE [2] 將DataFrame存入CSV檔 &amp; 抓取多筆資料</title>
    <link>http://hsiangjenli.github.io/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/</link>
    <pubDate>Sat, 28 Nov 2020 16:57:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/</guid>
    <description><![CDATA[DataFrame存入CSV檔 個股月成交資訊 1 相對路徑 1  df.to_csv(&#39;檔案名稱.csv&#39;)   2 絕對路徑 1  df.to_csv (r&#39;路徑\檔案名稱.csv&#39;)   3 取得路徑 1 2 3  import os os.getcwd()   4 df.to_csv 使用 1 以&quot;/&ldquo;隔開 1  df.to_csv (&#39;檔案名稱.csv&#39;, sep=&#39;/&#39;)   2 將檔案重複寫入 1  df.to_csv (&#39;檔案名稱.csv&#39;, mode = &#39;a&#39;)   3 替換空值 1  df.to_csv (&#39;檔案名稱.csv&#39;, na_rep=&#39;NA&#39;)   4 小數4位 1  df.to_csv (&#39;檔案名稱.csv&#39;, float_format=&#39;%.4f&#39;)   5 不保留列名header 1  df.]]></description>
</item><item>
    <title>TWSE [1] jsn檔解析</title>
    <link>http://hsiangjenli.github.io/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/</link>
    <pubDate>Fri, 27 Nov 2020 16:57:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/</guid>
    <description><![CDATA[TWSE股票資料 1 個股月成交資訊   個股月成交資訊以台積電2330為例
  點選 列印/HTML
  更改 html 為 jsn   更改 20200813為 20200713，即可找到7月資料
  更改 stockNo=2330 為 stockNo=1234，即可找到黑松交易資
 https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn&amp;date=20200713&amp;stockNo=2330
  https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn&amp;date=20200713&amp;stockNo=1234
   在exchangeReport前加上 /en/ 轉換成英文版
 https://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn&amp;date=20200713&amp;stockNo=1234
 1 2 3 4 5  stock_list = [1234, 2330] date = 20200813 for j in range(0,len(stock_list)): url = &#34;http://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn&amp;date={}&amp;stockNo={}&#34;.format(date,stock_list[j]) print(url)   ``
  2 每日收盤行情  每日收盤行情-全部 點選 列印/HTML 更改 html 為 jsn 更改 20200827 為 20200828，即可找到8月28日資料 在exchangeReport前加上 /en/ 轉換成英文版  https://www.]]></description>
</item></channel>
</rss>
