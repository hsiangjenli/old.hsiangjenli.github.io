<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>MySQL - Tag - HJL</title>
        <link>http://hsiangjenli.github.io/tags/mysql/</link>
        <description>MySQL - Tag - HJL</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hsiangjenli@gmail.com (HJL)</managingEditor>
            <webMaster>hsiangjenli@gmail.com (HJL)</webMaster><lastBuildDate>Sun, 29 Nov 2020 12:40:15 &#43;0800</lastBuildDate><atom:link href="http://hsiangjenli.github.io/tags/mysql/" rel="self" type="application/rss+xml" /><item>
    <title>TWSE [6] MySQL to Dataframe &amp; mplfinance K線圖</title>
    <link>http://hsiangjenli.github.io/twse-6-mysql-to-dataframe-mplfinance-k%E7%B7%9A%E5%9C%96/</link>
    <pubDate>Sun, 29 Nov 2020 12:40:15 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-6-mysql-to-dataframe-mplfinance-k%E7%B7%9A%E5%9C%96/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/CPRYg8F.png" referrerpolicy="no-referrer">
            </div>MySQL to Dataframe SQL連線 1 2 3 4 5 6 7 8 9 10  user = &#39;root&#39; pw = &#34;YourPassworrd&#34; conn=MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw,charset=&#39;utf8&#39;) cursor=conn.cursor() cursor.execute(&#34;CREATE DATABASE IF NOT EXISTS TWSE DEFAULT CHARSET=utf8 DEFAULT COLLATE=utf8_unicode_ci&#34; ) engine = create_engine(&#34;mysql+pymysql://{}:{}@localhost/{db}&#34;.format(user,pw,db=&#34;TWSE&#34;)) df = pd.read_sql(&#34;SELECT* FROM `twse` WHERE `Stock Code` = 2330 AND `Date` BETWEEN &#39;2019/11/10 00:00:00&#39; AND &#39;2020/1/10 23:59:59&#39;&#34;, engine, coerce_float=True, parse_dates=True)   讀取資料庫Table至Dataframe 1 2 3 4  import pandas as pd df = pd.]]></description>
</item><item>
    <title>TWSE [5] mpl_finance K線圖</title>
    <link>http://hsiangjenli.github.io/twse-5-mpl_finance-k%E7%B7%9A%E5%9C%96/</link>
    <pubDate>Sun, 29 Nov 2020 12:05:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-5-mpl_finance-k%E7%B7%9A%E5%9C%96/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/pSXpsdo.png" referrerpolicy="no-referrer">
            </div>mpl_finance [舊版] SQL連線 個股月成交資訊 1 2 3 4 5 6 7 8  import MySQLdb user = &#39;root&#39; pw = &#34;YourPassworrd&#34; conn=MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw,charset=&#39;utf8&#39;) cursor=conn.cursor() cursor.execute(&#39;USE STOCK&#39;)   mpl_finance 1 2 3  import matplotlib.pyplot as plt import mpl_finance as mpf %matplotlib inline   基本設定 1 2 3 4 5 6 7 8 9 10 11 12 13  p = [int(e) for e in input(&#34;請輸入起始日期和結束日期&#34;).split(&#34; &#34;)] # 以空格隔開 period = &#34;`Date` BETWEEN &#39;{}/{}/{} 00:00:00&#39; AND &#39;{}/{}/{} 23:59:59&#39;&#34;.]]></description>
</item><item>
    <title>TWSE [4] 資料存入MySQL及取出</title>
    <link>http://hsiangjenli.github.io/twse-4-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5mysql/</link>
    <pubDate>Sun, 29 Nov 2020 11:25:26 &#43;0800</pubDate>
    <author>Author</author>
    <guid>http://hsiangjenli.github.io/twse-4-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5mysql/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://i.imgur.com/oiZJduz.png" referrerpolicy="no-referrer">
            </div>TWSE的資料存入MySQL SQL連線 1 基本設定 1 2 3 4  import MySQLdb user = &#39;root&#39; pw = &#34;YourPassworrd&#34;   2 不使用中文 1 2  conn = MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw) cursor=conn.cursor()   3 可使用中文 / charset=&lsquo;utf8&rsquo; / 1 2  conn=MySQLdb.connect(host=&#34;127.0.0.1&#34;,user=user, passwd=pw,charset=&#39;utf8&#39;) cursor=conn.cursor()   create_engine pymysql sqlalchemy 1  pip install pymysql sqlalchemy   1 2 3  from sqlalchemy import create_engine engine = create_engine(&#34;mysql+pymysql://{}:{}@localhost/{db}&#34;.format(user,pw,db=&#34;STOCK&#34;))   個股月成交資訊/en/ 完整程式碼 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  import urllib.]]></description>
</item></channel>
</rss>
