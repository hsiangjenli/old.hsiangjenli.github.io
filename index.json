[{"categories":["Python","TWSE"],"content":"TWSE的資料存入SQLite ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:0:0","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"個股月成交資訊 ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:1:0","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"1 SQLite連線 import sqlite3 conn = sqlite3.connect('Python_Stock_TWSE.db') c = conn.cursor() ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:1:1","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"2 建立Table c.execute('CREATE TABLE IF NOT EXISTS TWSE2330_tempt (股票代碼, 日期, 成交股數, 成交金額, 開盤價, 最高價, 最低價, 收盤價, 漲跌價差, 成交筆數)') ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:1:2","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"3 刪除Table c.execute('DROP TABLE TWSE2330_tempt') ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:1:3","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"# 完整程式碼 import pandas as pd import urllib.request, json import datetime import time import sqlite3 conn = sqlite3.connect('Python_Stock_TWSE.db') c = conn.cursor() c.execute('CREATE TABLE IF NOT EXISTS TWSE (股票代碼 int, 日期 date, 成交股數 float, 成交金額 float, 開盤價 float, 最高價 float, 最低價 float, 收盤價 float, 漲跌價差 float, 成交筆數 float)') conn.commit() date_now = datetime.datetime.now() stock_list = [2330,1234] m = int(input(\"請輸入欲抓取月份數\"))-1 for j in range(0,len(stock_list)): for i in range (m,-1,-1): date = date_now - i*datetime.timedelta(days = 30.4375) url = \"http://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(str(date).split(' ')[0].replace('-',''),stock_list[j]) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) df = pd.DataFrame(data['data'][0:len(data['data'])]) df.columns = data['fields'] df[\"股票代碼\"] = stock_list[j] df = df.set_index('股票代碼') df.to_sql('TWSE', conn, if_exists='append', index = True) conn.commit() print(\"[#{}] {} is loading...\".format(stock_list[j], data['date'])) time.sleep(5) conn.close() print(\"Done\") ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:1:4","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"資料庫資料重複問題解決 ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:2:0","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"1 選出沒有重複的資料 SELECT* FROM TWSE GROUP BY 股票代碼, 日期 HAVING count(*)\u003e0 ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:2:1","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"2 TWSE_tempt當作緩存 將TWSE改成TWSE_tempt當作緩存 ，再新增一個TWSE INSERT INTO TWSE SELECT* FROM TWSE_tempt GROUP BY 股票代碼, 日期 HAVING count(*)\u003e0 c.execute('''INSERT INTO TWSE SELECT* FROM TWSE_tempt GROUP BY 股票代碼, 日期 HAVING count(*)\u003e0''') ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:2:2","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"# 完整程式碼 import pandas as pd import urllib.request, json import datetime import time import sqlite3 conn = sqlite3.connect('Python_Stock_TWSE.db') c = conn.cursor() c.execute('CREATE TABLE IF NOT EXISTS TWSE (股票代碼 int, 日期 date, 成交股數 float, 成交金額 float, 開盤價 float, 最高價 float, 最低價 float, 收盤價 float, 漲跌價差 float, 成交筆數 float)') c.execute('ALTER TABLE TWSE RENAME TO TWSE_tempt') conn.commit() date_now = datetime.datetime.now() stock_list = [2330,1234] m = int(input(\"請輸入欲抓取月份數\"))-1 for j in range(0,len(stock_list)): for i in range (m,-1,-1): date = date_now - i*datetime.timedelta(days = 30.4375) url = \"http://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(str(date).split(' ')[0].replace('-',''),stock_list[j]) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) df = pd.DataFrame(data['data'][0:len(data['data'])]) df.columns = data['fields'] df[\"股票代碼\"] = stock_list[j] df = df.set_index('股票代碼') df.to_sql('TWSE_tempt', conn, if_exists='append', index = True) print(\"[{}] Month: {} is loading......\".format(str(stock_list[j]),str(date).split('-')[1])) time.sleep(5) c.execute('CREATE TABLE TWSE (股票代碼 int, 日期 date, 成交股數 float, 成交金額 float, 開盤價 float, 最高價 float, 最低價 float, 收盤價 float, 漲跌價差 float, 成交筆數 float)') c.execute('''INSERT INTO TWSE SELECT* FROM TWSE_tempt GROUP BY 股票代碼, 日期 HAVING count(*)\u003e0''') c.execute('DROP TABLE TWSE_tempt') print(\"Done\") conn.commit() conn.close() ","date":"2020-11-28","objectID":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/:2:3","tags":["Python","TWSE","dataframe","df.to_sql","SQLite"],"title":"TWSE [3] 資料存入SQLite","uri":"/twse-3-%E8%B3%87%E6%96%99%E5%AD%98%E5%85%A5sqlite/"},{"categories":["Python","TWSE"],"content":"DataFrame存入CSV檔 ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:0:0","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"個股月成交資訊 ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:1:0","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"1 相對路徑 df.to_csv('檔案名稱.csv') ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:1:1","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"2 絕對路徑 df.to_csv (r'路徑\\檔案名稱.csv') ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:1:2","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"3 取得路徑 import os os.getcwd() ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:1:3","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"4 df.to_csv 使用 1 以\"/“隔開 df.to_csv ('檔案名稱.csv', sep='/') 2 將檔案重複寫入 df.to_csv ('檔案名稱.csv', mode = 'a') 3 替換空值 df.to_csv ('檔案名稱.csv', na_rep='NA') 4 小數4位 df.to_csv ('檔案名稱.csv', float_format='%.4f') 5 不保留列名header df.to_csv ('檔案名稱.csv', header=0) 6 不保留引索值index df.to_csv ('檔案名稱.csv', index=0) # 完整程式碼 import pandas as pd import urllib.request, json import time stock_list = [1101,1234,2330,2337] date = 20200813 for j in range(0,len(stock_list)): url = \"http://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(date,stock_list[j]) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) stock_data.append(data) df = pd.DataFrame(data['data'][0:len(data['data'])]) df.columns = data['fields'] df[\"Stock Code\"] = stock_list[j] df = df.set_index('Stock Code') df = df.applymap(lambda x: str(x.replace(',',''))) print(\"[#{}] {} is loading...\".format(stock_list[j], data['date'])) df.to_csv (r'C:\\Users\\User\\Downloads\\Python\\Python_Stock_TWSE_type = 2330.csv', mode='a', header=0) time.sleep(5) ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:1:4","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"抓取多筆資料 ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:2:0","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"個股月成交資訊 import urllib.request, json import datetime import pandas as pd date_now = datetime.datetime.now() stock_list = [2330,1234] m = int(input(\"請輸入欲抓取月份數\"))-1 for j in range(0,len(stock_list)): for i in range (m,-1,-1): date = date_now - i*datetime.timedelta(days = 30.4375) url = \"http://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(str(date).split(' ')[0].replace('-',''),stock_list[j]) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) df = pd.DataFrame(data['data'][0:len(data['data'])]) df.columns = data['fields'] df[\"股票代碼\"] = stock_list[j] df = df.set_index('股票代碼') print(df) ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:2:1","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"每日收盤行情 import urllib.request, json import datetime import time import pandas as pd date = datetime.datetime.now() n = int(input('抓取n日資料')) for i in range(n): url = \"https://www.twse.com.tw/exchangeReport/MI_INDEX?response=jsn\u0026date={}\u0026type=ALL\".format(str(date).split(' ')[0].replace('-','')) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) if data['stat'] ==\"OK\": df = pd.DataFrame(data['data9'][0:len(data['data9'])]) df.columns = data['fields9'] print(url) time.sleep(4) else: print(data['stat']) date = date - datetime.timedelta(days = 1) ","date":"2020-11-28","objectID":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/:2:2","tags":["Python","TWSE","dataframe","df.to_csv"],"title":"TWSE [2] 將DataFrame存入CSV檔 \u0026 抓取多筆資料","uri":"/twse-2-%E5%B0%87dataframe%E5%AD%98%E5%85%A5csv%E6%AA%94/"},{"categories":["Python","TWSE"],"content":"TWSE股票資料 ","date":"2020-11-27","objectID":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/:1:0","tags":["Python","TWSE","jsn","dataframe"],"title":"TWSE [1] jsn檔解析","uri":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/"},{"categories":["Python","TWSE"],"content":"1 個股月成交資訊 個股月成交資訊以台積電2330為例 點選 列印/HTML 更改 html 為 jsn 更改 20200813為 20200713，即可找到7月資料 更改 stockNo=2330 為 stockNo=1234，即可找到黑松交易資 https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn\u0026date=20200713\u0026stockNo=2330 https://www.twse.com.tw/exchangeReport/STOCK_DAY?response=jsn\u0026date=20200713\u0026stockNo=1234 在exchangeReport前加上 /en/ 轉換成英文版 https://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn\u0026date=20200713\u0026stockNo=1234 stock_list = [1234, 2330] date = 20200813 for j in range(0,len(stock_list)): url = \"http://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(date,stock_list[j]) print(url) `` ","date":"2020-11-27","objectID":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/:1:1","tags":["Python","TWSE","jsn","dataframe"],"title":"TWSE [1] jsn檔解析","uri":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/"},{"categories":["Python","TWSE"],"content":"2 每日收盤行情 每日收盤行情-全部 點選 列印/HTML 更改 html 為 jsn 更改 20200827 為 20200828，即可找到8月28日資料 在exchangeReport前加上 /en/ 轉換成英文版 https://www.twse.com.tw/en/exchangeReport/MI_INDEX?response=jsn\u0026date=20200828\u0026type=ALL ","date":"2020-11-27","objectID":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/:1:2","tags":["Python","TWSE","jsn","dataframe"],"title":"TWSE [1] jsn檔解析","uri":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/"},{"categories":["Python","TWSE"],"content":"解析Json檔 ","date":"2020-11-27","objectID":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/:2:0","tags":["Python","TWSE","jsn","dataframe"],"title":"TWSE [1] jsn檔解析","uri":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/"},{"categories":["Python","TWSE"],"content":"1 個股月成交資訊/en/ 1 解析 import urllib.request, json stock_list = [2330] date = 20200813 for j in range(0,len(stock_list)): url = \"http://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(date,stock_list[j]) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) print(data) 2 Json Editor for i in range(0, len(data['data'])): print(data['data'][i]) print(data['fields']) print(data['date']) print(data['title']) 3 以DataFrame呈現資料 1 DataFrame呈現 import pandas as pd df = pd.DataFrame(data['data'][0:len(data['data'])]) 2 設定欄位 df.columns = data['fields'] 3 增加Stock Code至df df[\"Stock Code\"] = stock_list[j] 4 將Stock Code 設為 index df = df.set_index('Stock Code') 5 將逗號拿掉 df = df.applymap(lambda x: str(x.replace(',',''))) # 完整程式碼 import pandas as pd import urllib.request, json stock_list = [2330] date = 20200813 for j in range(0,len(stock_list)): url = \"http://www.twse.com.tw/en/exchangeReport/STOCK_DAY?response=jsn\u0026date={}\u0026stockNo={}\".format(date,stock_list[j]) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) df = pd.DataFrame(data['data'][0:len(data['data'])]) df.columns = data['fields'] df[\"Stock Code\"] = stock_list[j] df = df.set_index('Stock Code') df = df.applymap(lambda x: str(x.replace(',',''))) df ","date":"2020-11-27","objectID":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/:2:1","tags":["Python","TWSE","jsn","dataframe"],"title":"TWSE [1] jsn檔解析","uri":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/"},{"categories":["Python","TWSE"],"content":"2 每日收盤行情 解析Json檔 1 解析 import urllib.request, json import datetime date = datetime.datetime.now() url = \"https://www.twse.com.tw/exchangeReport/MI_INDEX?response=jsn\u0026date={}\u0026type=ALL\".format(str(date).split(' ')[0].replace('-','')) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) print(data) print(data['fields9']) print(data['data9']) 2 以DataFrame呈現 import pandas as pd df = pd.DataFrame(data['data9'][0:len(data['data9'])]) df.columns = data['fields9'] 3 將漲跌(+/-)刪除 df = df.drop(columns = '漲跌(+/-)') 4 將證券代號設為index df = df.set_index('證券代號') 5 將逗號拿掉 df = df.applymap(lambda x: str(x.replace(',',''))) 6 加入日期 df[\"日期\"] = str(date).split(' ')[0].replace('-','/') # 完整程式碼 import urllib.request, json import pandas as pd import datetime date = datetime.datetime.now() url = \"https://www.twse.com.tw/exchangeReport/MI_INDEX?response=jsn\u0026date={}\u0026type=ALL\".format(str(date).split(' ')[0].replace('-','')) with urllib.request.urlopen(url) as jsonfile: data = json.loads(jsonfile.read().decode()) df = pd.DataFrame(data['data9'][0:len(data['data9'])]) df.columns = data['fields9'] df = df.drop(columns = '漲跌(+/-)') df = df.set_index('證券代號') df = df.applymap(lambda x: str(x.replace(',',''))) df[\"日期\"] = str(date).split(' ')[0].replace('-','/') df ","date":"2020-11-27","objectID":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/:2:2","tags":["Python","TWSE","jsn","dataframe"],"title":"TWSE [1] jsn檔解析","uri":"/twse-1-jsn%E6%AA%94%E8%A7%A3%E6%9E%90/"}]